<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>UM General Atmosphere: /home/wilfred/PhD/UM/src/atmosphere/lbc_input/inbounda.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="unified_model_logo_2.jpeg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">UM General Atmosphere
   &#160;<span id="projectnumber">8.6</span>
   </div>
   <div id="projectbrief">UK Met Offices Unified Model</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1df14ea1ac826f73bc3062fa8a76e0c2.xhtml">atmosphere</a></li><li class="navelem"><a class="el" href="dir_4307e1db6994186e27209ab3db0532b9.xhtml">lbc_input</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">inbounda.f90</div>  </div>
</div><!--header-->
<div class="contents">
<a href="inbounda_8f90.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keyword">      SUBROUTINE </span><a class="code" href="inbounda_8f90.xhtml#a03113c1df1b59dfb5e6cd09be4785dba" title="Subroutine INBOUNDA. ">inbounda</a>(                                              &amp;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;#include &quot;argduma.h&quot;</div><div class="line"><a name="l00020"></a><span class="lineno"><a class="line" href="inbounda_8f90.xhtml#a03113c1df1b59dfb5e6cd09be4785dba">   20</a></span>&#160;#include &quot;argsts.h&quot;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;#include &quot;argptra.h&quot;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;#include &quot;argbnd.h&quot;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;         a_len1_levdepcda,a_len2_levdepcda,                             &amp;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;         a_len1_rowdepcda,a_len2_rowdepcda,                             &amp;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;         a_len1_coldepcda,a_len2_coldepcda)</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;      <span class="keywordtype">USE </span>yomhook<span class="keywordtype">, ONLY</span>: lhook, dr_hook</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;      <span class="keywordtype">USE </span>parkind1<span class="keywordtype">, ONLY</span>: jprb, jpim</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceio.xhtml" title="Code Owner: See Unified Model Code owners HTML page. ">io</a></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;      <span class="keywordtype">USE </span>atm_fields_bounds_mod</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacecheck__iostat__mod.xhtml">check_iostat_mod</a></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacesubmodel__mod.xhtml" title="A module to contain information about submodels A module to contain information about submodels...">submodel_mod</a></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacetypstsz__mod.xhtml" title="This file belongs in section: Top_level This file belongs in section: Top_level. ">typstsz_mod</a></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacenlstgen__mod.xhtml" title="Control variables Control variables. ">nlstgen_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacenlstgen__mod.xhtml#aded406ffa8d50a7c4a6325c5b75eb03d">steps_per_periodim</a>, <a class="code" href="namespacenlstgen__mod.xhtml#a4a6ed31ef0d09bdc976baf277d1acbe7">secs_per_periodim</a></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceereport__mod.xhtml" title="This file belongs in section: Misc. ">ereport_mod</a><span class="keywordtype">, ONLY</span> : <a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceumprintmgr.xhtml" title="This file belongs in section: Misc. ">umprintmgr</a>          use um_parvars</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacecontrol__max__sizes.xhtml" title="This file belongs in section: Misc. ">control_max_sizes</a></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacelbc__mod.xhtml" title="This file belongs in section: MPP. ">lbc_mod</a></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacelookup__addresses.xhtml" title="Parameters for addressing elements in a UM file lookup table. ">lookup_addresses</a></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacedust__parameters__mod.xhtml" title="A module containing constants/parameters used in the dust scheme. ">dust_parameters_mod</a><span class="keywordtype">, ONLY</span>:             <a class="code" href="namespacedust__parameters__mod.xhtml#ac897534dc97f74f123a81079a464283b" title="Parameters fundamental to the dust scheme!&gt; (Details of dust properties/size divisions etc...">l_dust</a>,                &amp;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;           <a class="code" href="namespacedust__parameters__mod.xhtml#accf125bd8f492a302961f637957f5535" title="Logical to contain whether using two-bin (true) or six-bin (false) dustLOGICAL :: l_twobin_dust = ...">l_dust_div1</a>,       <a class="code" href="namespacedust__parameters__mod.xhtml#a374757e6a66592f2ceada3497619cc3c">l_dust_div2</a>,       <a class="code" href="namespacedust__parameters__mod.xhtml#ac6acc57c8554d263b3594eb980586447">l_dust_div3</a>,           &amp;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;           <a class="code" href="namespacedust__parameters__mod.xhtml#aec3d8ac466702a50a266c31dfd747715">l_dust_div4</a>,       <a class="code" href="namespacedust__parameters__mod.xhtml#af38ed631d22ffa2f40c81cb4ff48fb5d">l_dust_div5</a>,       <a class="code" href="namespacedust__parameters__mod.xhtml#a84998c723e801b5d6b505c6c4900e62b">l_dust_div6</a></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespaceum__input__control__mod.xhtml" title="*****************************COPYRIGHT******************************** *****************************C...">um_input_control_mod</a><span class="keywordtype">,  ONLY</span>:                                  &amp;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;           <a class="code" href="namespaceum__input__control__mod.xhtml#a982e30d27f2071480a759de633683b3d">l_dust_div1_lbc</a>,                     <a class="code" href="namespaceum__input__control__mod.xhtml#a284106535ce7a70bc22025068c984135">l_dust_div2_lbc</a>,        &amp;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;                             <a class="code" href="namespaceum__input__control__mod.xhtml#a17dc07ba449d9327ad8e4c9725b49367">l_dust_div3_lbc</a>,                           &amp;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;           <a class="code" href="namespaceum__input__control__mod.xhtml#ae2b5bbafde91cf6492b665ebf67514ec">l_dust_div4_lbc</a>,                     <a class="code" href="namespaceum__input__control__mod.xhtml#a4ebbfaf732b2ae27848fb173aa2348b5">l_dust_div5_lbc</a>,        &amp;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                             <a class="code" href="namespaceum__input__control__mod.xhtml#a830b1a550adc0d8bdb6a4f546208617f">l_dust_div6_lbc</a>,        &amp;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;           <a class="code" href="namespaceum__input__control__mod.xhtml#a7b7f4fc8e5cac7ae5daba6867763b636">l_so2_lbc</a>,        <a class="code" href="namespaceum__input__control__mod.xhtml#ae5259f1b72d7c605cfd965eab5b48404">l_dms_lbc</a>,              &amp;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;           l_so4_aitken_lbc,              &amp;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;           <a class="code" href="namespaceum__input__control__mod.xhtml#ab4cbe6e1ba9e73efc0a427893ce28e7c">l_so4_accu_lbc</a>,   <a class="code" href="namespaceum__input__control__mod.xhtml#a5433e471ae4070898840f278d3fc49ae">l_so4_diss_lbc</a>,         &amp;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;           <a class="code" href="namespaceum__input__control__mod.xhtml#aaea0ea78977b44ecf186f27e2fe7e663">l_nh3_lbc</a>,                      &amp;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;           <a class="code" href="namespaceum__input__control__mod.xhtml#a9b068bdc934eeb5d0cbc08f078736354">l_soot_new_lbc</a>,   <a class="code" href="namespaceum__input__control__mod.xhtml#ad97981f0b4263f64e1c1d2ba8e0913c5">l_soot_agd_lbc</a>,  <a class="code" href="namespaceum__input__control__mod.xhtml#ac5604d3a9c8d86455ca770936b94e059">l_soot_cld_lbc</a>,  &amp;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;           <a class="code" href="namespaceum__input__control__mod.xhtml#a11a0ec37d896fd60560db565508970bf">l_bmass_new_lbc</a>,  <a class="code" href="namespaceum__input__control__mod.xhtml#a0d02c8f5f0fc85414be3215c13583176">l_bmass_agd_lbc</a>, <a class="code" href="namespaceum__input__control__mod.xhtml#a6766618ef656027adf9a1bf738a3d45e">l_bmass_cld_lbc</a>,   &amp;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;           <a class="code" href="namespaceum__input__control__mod.xhtml#af5ce281d0c9cfdc131210e54912c26ad">l_ocff_new_lbc</a>,   <a class="code" href="namespaceum__input__control__mod.xhtml#a893949e0aa5eb5086e4064b41a24fa50">l_ocff_agd_lbc</a>,  <a class="code" href="namespaceum__input__control__mod.xhtml#a3ee37d136478006737eb7739d3d5fb62">l_ocff_cld_lbc</a>,  &amp;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;           <a class="code" href="namespaceum__input__control__mod.xhtml#a1f61a6c038dfb6c2f0e374d64907c349">l_nitr_acc_lbc</a>,   <a class="code" href="namespaceum__input__control__mod.xhtml#a1e941cb6ee61cf94de25501cd26309d4">l_nitr_diss_lbc</a>,  &amp;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;           <a class="code" href="namespaceum__input__control__mod.xhtml#a9379d2394efa879a4fbd3be4ea34b035">lcal360</a>,                  model_domain</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacemodel__file.xhtml" title="A simple data module containing variables related to STASH buffering. ">model_file</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacemodel__file.xhtml#a07b515dfc8147e86355cd71196399c5d">model_file_open</a></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacedomain__params.xhtml" title="This file belongs in section: MPP. ">domain_params</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacedomain__params.xhtml#aa92f3e4322e3a83dea3552093c437600">mt_bi_cyclic_lam</a>, <a class="code" href="namespacedomain__params.xhtml#a461a75f256e4989e92e829eb45b0cd15">mt_cyclic_lam</a></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacelbc__read__data__mod.xhtml" title="Input control for LBC reading Input control for LBC reading. ">lbc_read_data_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacelbc__read__data__mod.xhtml#a2622155097222cb0037b59b37d105774">albc_num</a>, <a class="code" href="namespacelbc__read__data__mod.xhtml#afd1123b50bf611cc17a221dad3f63c3d">albc_swapstep</a>,             &amp;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                                   <a class="code" href="namespacelbc__read__data__mod.xhtml#aaad0f93bd0c41249f7d0aa9549e010a9">albc2_starttime_steps</a>,               &amp;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                                   <a class="code" href="namespacelbc__read__data__mod.xhtml#ad6cbc4ec8581a159e30ac178e336c794">current_lbc_step</a>, <a class="code" href="namespacelbc__read__data__mod.xhtml#a2517da7f59456064887beb480a8ddefb">rimweightsa</a>,       &amp;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                                   bouncnst</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacemphys__inputs__mod.xhtml" title="*****************************COPYRIGHT************************************** ************************...">mphys_inputs_mod</a><span class="keywordtype">, ONLY</span>:                                       &amp;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;           <a class="code" href="namespacemphys__inputs__mod.xhtml#a1e977cd2bfc88d00f67153d185e877f8">l_mcr_qcf2</a>,       <a class="code" href="namespacemphys__inputs__mod.xhtml#ad7a185633b19aced8c7ee7a44a2026cb">l_mcr_qcf2_lbc</a>,    <a class="code" href="namespacemphys__inputs__mod.xhtml#a3d970e6ae2e572f69c0d3cea5b5247ce">l_mcr_qgraup</a>,           &amp;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;           <a class="code" href="namespacemphys__inputs__mod.xhtml#a6cc9d6c615bc5b63edba595a217f3ee8">l_mcr_qgraup_lbc</a>, <a class="code" href="namespacemphys__inputs__mod.xhtml#aa35a37d47ad08e8b5cc1390e7a5b4eb0">l_mcr_qrain_lbc</a>,   <a class="code" href="namespacemphys__inputs__mod.xhtml#ad580b93fb6223c38181f3f05d1b82c62">l_mcr_qrain</a></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacecloud__inputs__mod.xhtml" title="*****************************COPYRIGHT************************************** ************************...">cloud_inputs_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacecloud__inputs__mod.xhtml#ae04fb44426849e3f308912a8311bb53b">l_pc2</a>, <a class="code" href="namespacecloud__inputs__mod.xhtml#a0f7c97dbc58534b4ed8a3510e9b17061">l_pc2_lbc</a></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;           <span class="keywordtype">USE </span><a class="code" href="namespacemurk__inputs__mod.xhtml" title="*****************************COPYRIGHT************************************** ************************...">murk_inputs_mod</a><span class="keywordtype">,  ONLY</span>: <a class="code" href="namespacemurk__inputs__mod.xhtml#a86d12abdf2733c53d3b7b8c6a2edbde4" title="=========================================================================== LOGICAL options set from ...">l_murk</a>, <a class="code" href="namespacemurk__inputs__mod.xhtml#a3d09955720c1dac82527fd9fcc7af728">l_murk_lbc</a></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;           <span class="keywordtype">USE </span><a class="code" href="namespacenlstcall__mod.xhtml" title="Control variables Control variables. ">nlstcall_mod</a><span class="keywordtype">, ONLY</span> : <a class="code" href="namespacenlstcall__mod.xhtml#a88acd7561aab078131bb8e9e33721582">num_albcs</a></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacechsunits__mod.xhtml" title="copied from include file chsunits.h ">chsunits_mod</a><span class="keywordtype">, ONLY</span> : <a class="code" href="namespacechsunits__mod.xhtml#af6e26d3a6a1fedf0b44203712a772f8e">nunits</a></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;      <span class="keywordtype">USE </span><a class="code" href="namespacefile__units__mod.xhtml">file_units_mod</a><span class="keywordtype">, ONLY</span>: <a class="code" href="namespacefile__units__mod.xhtml#a21ad99eade3c51380f41db5679ab7ed5">ft_environ</a>, <a class="code" href="namespacefile__units__mod.xhtml#a347ca6d6a8fb4c82d7fa2743f5115418">len_ft_envir</a></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;      <span class="keywordtype">IMPLICIT NONE</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="preprocessor">#include &quot;typsize.h&quot;</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;typduma.h&quot;</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;typsts.h&quot;</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;typptra.h&quot;</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;typbnd.h&quot;</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;      <span class="keywordtype">INTEGER</span> :: a_len1_levdepcda   <span class="comment">! IN : copy of A_LEN1_LEVDEPC</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;      <span class="keywordtype">INTEGER</span> :: a_len2_levdepcda   <span class="comment">! IN : copy of A_LEN2_LEVDEPC</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;      <span class="keywordtype">INTEGER</span> :: a_len1_rowdepcda   <span class="comment">! IN : copy of A_LEN1_ROWDEPC</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;      <span class="keywordtype">INTEGER</span> :: a_len2_rowdepcda   <span class="comment">! IN : copy of A_LEN2_ROWDEPC</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;      <span class="keywordtype">INTEGER</span> :: a_len1_coldepcda   <span class="comment">! IN : copy of A_LEN1_COLDEPC</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;      <span class="keywordtype">INTEGER</span> :: a_len2_coldepcda   <span class="comment">! IN : copy of A_LEN2_COLDEPC</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;     <span class="preprocessor">#include &quot;chistory.h&quot;</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;ctime.h&quot;</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;c_mdi.h&quot;</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="preprocessor">#include &quot;ctracera.h&quot;</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;cruntimc.h&quot;</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;      <span class="keywordtype">INTEGER</span> ::                                                        &amp;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;              I,                                                        &amp;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;              J,                                                        &amp;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;              J1,                                                       &amp;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;              lbc_num,                                                  &amp;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;              start_block,                                              &amp;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;              nftin,                                                    &amp;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;              nftenv,                                                   &amp;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                                   <span class="comment">! Index in FT_ENV arrays</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;              im_index,                                                 &amp;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                                   <span class="comment">! Internal model index</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;              elapsed_days,                                             &amp;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                                   <span class="comment">! Days since basis time</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;              elapsed_secs,                                             &amp;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                                   <span class="comment">! Secs since basis time</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;              current_time_days,                                        &amp;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                                   <span class="comment">! No. of days to current time</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;              current_time_secs,                                        &amp;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                                   <span class="comment">! No. of secs-in-day to current time</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;              days_to_data_start,                                       &amp;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                                   <span class="comment">! Days  to start of boundary data</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;              secs_to_data_start,                                       &amp;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;                                   <span class="comment">! Secs  to start of boundary data</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;              days_to_data_end,                                         &amp;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                                   <span class="comment">! Days  to end   of boundary data</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;              secs_to_data_end,                                         &amp;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                                   <span class="comment">! Secs  to end   of boundary data</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;              steps_to_data_start,                                      &amp;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                                   <span class="comment">! Steps to start of boundary data</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;              steps_to_data_end,                                        &amp;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                                   <span class="comment">! Steps to end   of boundary data</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;              rim_stepsa_old,                                           &amp;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                                   <span class="comment">! Data interval for last bndy file</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;              steps_to_bdi_start,                                       &amp;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                                   <span class="comment">! Steps to start/end of</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;              steps_to_bdi_end,                                         &amp;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                                   <span class="comment">! current boundary data interval</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;              basis_to_data_start_steps,                                &amp;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                                         <span class="comment">! Steps from basis time to</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                                         <span class="comment">! start of boundary data</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;              item_bounda(<a class="code" href="namespacelbc__mod.xhtml#a3d4836ab4183574e6b554577d04b1cef">rim_lookupsa</a>)  <span class="comment">! Boundary updatable item list</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;      <span class="keywordtype">LOGICAL</span> :: this_albc_for_bdi_end <span class="comment">! True IF same boundary file to</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                                       <span class="comment">! be used for end of current</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;                                       <span class="comment">! boundary data interval</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;      <span class="keywordtype">REAL</span> ::                                                              &amp;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;            a_levdepc_bo(a_len1_levdepcda,a_len2_levdepcda),               &amp;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;            a_rowdepc_bo(max(a_len1_rowdepcda,1),max(a_len2_rowdepcda,1)), &amp;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;            a_coldepc_bo(max(a_len1_coldepcda,1),max(a_len2_coldepcda,1))</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;           <span class="keywordtype">INTEGER</span> :: full_lookup_bounda(len1_lookup,<a class="code" href="namespacelbc__mod.xhtml#a3f4c011b8c56008d522191e4b4e9b59d">bound_lookupsa</a>)</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">PARAMETER</span> :: dummy =1</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">PARAMETER</span> :: sect36 = 36000</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;      <span class="keywordtype">INTEGER</span>, <span class="keywordtype">PARAMETER</span> :: sect37 = 37000</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;      <span class="keywordtype">INTEGER</span>             :: ErrorStatus      <span class="comment">! Return code</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;      <span class="keywordtype">CHARACTER (LEN=256)</span> :: cmessage         <span class="comment">! Error message</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;      <span class="keywordtype">CHARACTER (LEN=*)</span>, <span class="keywordtype">Parameter</span> :: RoutineName = <span class="stringliteral">&#39;inbounda&#39;</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;      <span class="keywordtype">REAL</span> :: p1,p2</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;      <span class="keywordtype">LOGICAL</span> :: lner</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;      lner(p1,p2) = ((abs(p1-p2))  &gt;   (1.e-6*abs(p1+p2)))</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;      <span class="keywordtype">LOGICAL</span>, <span class="keywordtype">SAVE</span> :: L_FirstCall = .true.</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;      <span class="keywordtype">INTEGER</span> :: k</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_in  = 0</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;      <span class="keywordtype">INTEGER(KIND=jpim)</span>, <span class="keywordtype">PARAMETER</span> :: zhook_out = 1</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;      <span class="keywordtype">REAL(KIND=jprb)</span>               :: zhook_handle</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;INBOUNDA&#39;</span>,zhook_in,zhook_handle)</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="comment">!       Internal Structure</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;      errorstatus=0</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;      cmessage=<span class="stringliteral">&#39; &#39;</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;      <span class="keywordflow">IF</span> (l_firstcall) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="comment">!  Rewind file and read namelist for boundary updating constants</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        rewind 5</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;        <span class="keyword">READ</span> (unit=5, nml=bouncnst, iostat=errorstatus)</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespacecheck__iostat__mod.xhtml#a566da52c3f5db6d5e0fe66bec78e47f8">check_iostat</a>(errorstatus, <span class="stringliteral">&quot;namelist BOUNCNST&quot;</span>)</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;       </div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="comment">!   1.0 Initialise variables in COMMON/CBND/, lest undefined for some</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="comment">!       choices of boundary updating, eg. -DEF,GLOBAL but not DEF,FLOOR,</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="comment">!       as used in section 2 to set boundary_stepsim for atmos</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;        rim_stepsa = 0</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="comment">!  Initialise bndary_offsetim &amp; boundary_stepsim in CTIME comdeck</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        <span class="keywordflow">DO</span> i=1,<a class="code" href="namespacesubmodel__mod.xhtml#ab6b72c46575eaced383c8aca09b1ef16" title="Max value of int. model id. ">internal_id_max</a></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;          bndary_offsetim(i) = 0</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;          boundary_stepsim(i) = 0</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="keywordflow">        END DO</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="keywordflow">      END IF</span> <span class="comment">! (L_FirstCall)</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="comment">!   1.1 Update interval for lateral boundaries for atmosphere</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="comment">!       Read headers and test whether boundary updating required</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;      <span class="keywordflow">IF</span> (l_fixed_lbcs .OR. l_force_lbc .OR.                          &amp;          model_domain == <a class="code" href="namespacedomain__params.xhtml#aa92f3e4322e3a83dea3552093c437600">mt_bi_cyclic_lam</a> .OR.                       &amp;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;          model_domain == <a class="code" href="namespacedomain__params.xhtml#a461a75f256e4989e92e829eb45b0cd15">mt_cyclic_lam</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        rim_stepsa=0</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;      <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="comment">!       Open input boundary file and read headers</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        nbound_lookup(1)=1</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        <span class="comment">! Use same unit number for first and second boundary files</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;        nftin = 125</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;        <span class="keywordflow">IF</span> (<a class="code" href="namespacelbc__read__data__mod.xhtml#a2622155097222cb0037b59b37d105774">albc_num</a> == 2) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceio.xhtml#ade07b9db8d4954fd605a7212d5f46e2a">file_close</a>(nftin,<a class="code" href="namespacefile__units__mod.xhtml#a21ad99eade3c51380f41db5679ab7ed5">ft_environ</a>(nftin),<a class="code" href="namespacefile__units__mod.xhtml#a347ca6d6a8fb4c82d7fa2743f5115418">len_ft_envir</a>(nftin), &amp;</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                          0, 0, errorstatus)</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;          <span class="keywordflow">IF</span>(errorstatus /= 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;            <span class="keyword">WRITE</span> (cmessage,<span class="stringliteral">&#39;(A)&#39;</span>) <span class="stringliteral">&#39;Failure closing first boundary file.&#39;</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;            <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename,errorstatus,cmessage)</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;          nftenv = 126 <span class="comment">! Env Var for 2nd boundary file</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;          nftenv = 125 <span class="comment">! Env Var for 1st boundary file</span></div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespacemodel__file.xhtml#a07b515dfc8147e86355cd71196399c5d">model_file_open</a>(nftin,<a class="code" href="namespacefile__units__mod.xhtml#a21ad99eade3c51380f41db5679ab7ed5">ft_environ</a>(nftenv),                  &amp;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;            <a class="code" href="namespacefile__units__mod.xhtml#a347ca6d6a8fb4c82d7fa2743f5115418">len_ft_envir</a>(nftenv),0,0,errorstatus)</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;        <span class="keywordflow">IF</span>(errorstatus /= 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;          <span class="keyword">WRITE</span> (cmessage,<span class="stringliteral">&#39;(A,I8)&#39;</span>)                                     &amp;</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;          <span class="stringliteral">&#39;Failure opening boundary file : No &#39;</span>, <a class="code" href="namespacelbc__read__data__mod.xhtml#a2622155097222cb0037b59b37d105774">albc_num</a></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;          <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename,errorstatus,cmessage)</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;<span class="comment">!       Read in fixed header to get array dimensions</span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="comment">! DEPENDS ON: read_flh</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;        <span class="keyword">CALL </span><a class="code" href="read__flh_8f90.xhtml#a8363a4617a406aafc132034f55a85183" title="SUBROUTINE READ_FLH -!&gt; ">read_flh</a>(nftin,fixhd_bounda(1,1),                          &amp;</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                             len_fixhd,errorstatus,cmessage)</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        <span class="keywordflow">IF</span> (errorstatus &gt;  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;          <span class="keyword">WRITE</span> (cmessage,<span class="stringliteral">&#39;(A)&#39;</span>)                                        &amp;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;                <span class="stringliteral">&#39;INBOUNDA : Error in READ_FLH for BOUNDA(1,1)&#39;</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;           <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename,errorstatus,cmessage)</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="comment">!       Check for negative dimensions</span></div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;        <span class="keywordflow">IF</span> (fixhd_bounda(101,1) &lt;= 0) fixhd_bounda(101,1)=1</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;        <span class="keywordflow">IF</span> (fixhd_bounda(106,1) &lt;= 0) fixhd_bounda(106,1)=1</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;        <span class="keywordflow">IF</span> (fixhd_bounda(111,1) &lt;= 0) fixhd_bounda(111,1)=1</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;        <span class="keywordflow">IF</span> (fixhd_bounda(112,1) &lt;= 0) fixhd_bounda(112,1)=1</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;        <span class="keywordflow">IF</span> (fixhd_bounda(116,1) &lt;= 0) fixhd_bounda(116,1)=1</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;        <span class="keywordflow">IF</span> (fixhd_bounda(117,1) &lt;= 0) fixhd_bounda(117,1)=1</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;        <span class="keywordflow">IF</span> (fixhd_bounda(121,1) &lt;= 0) fixhd_bounda(121,1)=1</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;        <span class="keywordflow">IF</span> (fixhd_bounda(122,1) &lt;= 0) fixhd_bounda(122,1)=1</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;        <span class="keywordflow">IF</span> (fixhd_bounda(151,1) &lt;= 0) fixhd_bounda(151,1)=1</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;        <span class="keywordflow">IF</span> (fixhd_bounda(152,1) &lt;= 0) fixhd_bounda(152,1)=1</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;        <span class="keywordflow">IF</span> (fixhd_bounda(161,1) &lt;= 0) fixhd_bounda(161,1)=1</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="comment">!       Check IF sufficient space allocated for LOOKUP table</span></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;        <span class="keywordflow">IF</span> (fixhd_bounda(152,1) &gt;  <a class="code" href="namespacelbc__mod.xhtml#a3f4c011b8c56008d522191e4b4e9b59d">bound_lookupsa</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<span class="stringliteral">&#39; INBOUNDA; not enough space for LBC lookup headers.&#39;</span>)</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<span class="stringliteral">&#39;           try increasing value specified in umui&#39;</span>)</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;      <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<span class="stringliteral">&#39;           window atmos_Infile_Options_Headers&#39;</span>)</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;          <span class="keyword">WRITE</span>(cmessage,<span class="stringliteral">&#39;(A)&#39;</span>)                                         &amp;</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;              <span class="stringliteral">&#39;INBOUNDA: Insufficient space for Lookup Table&#39;</span></div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;          errorstatus = 2</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;          <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename,errorstatus,cmessage)</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;        <span class="keyword">CALL </span><a class="code" href="namespaceio.xhtml#a6eff09a3646b168907ebda58a5355b2a">setpos</a> (nftin,0,errorstatus)</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;        <span class="keywordflow">IF</span> (errorstatus &gt;  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&#39;INBOUNDA: Problem with SETPOS for BOUNDA(1,1)&#39;</span>)</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;          <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,I8,A,I8)&#39;</span>)                                       &amp;</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;              <span class="stringliteral">&#39;ErrorStatus &#39;</span>,errorstatus,<span class="stringliteral">&#39; nftin &#39;</span>,nftin</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>)</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;          <span class="keyword">WRITE</span>(cmessage,<span class="stringliteral">&#39;(A)&#39;</span>) <span class="stringliteral">&#39;Problem with Setpos for Bounda(1,1)&#39;</span></div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;          <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename,errorstatus,cmessage)</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;<span class="comment">! DEPENDS ON: readhead</span></div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;        <span class="keyword">CALL </span><a class="code" href="readhead_8f90.xhtml#af37bf84978a2c56e2bc7765318ca005f" title="SUBROUTINE READHEAD. ">readhead</a>(nftin,                                            &amp;</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;                      fixhd_bounda(1,1),len_fixhd,                      &amp;</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;                      inthd_bounda(1,1),fixhd_bounda(101,1),            &amp;</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;                      realhd_bounda(1,1),fixhd_bounda(106,1),           &amp;</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;                      a_levdepc_bo(1,1),                                &amp;</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;                      fixhd_bounda(111,1),fixhd_bounda(112,1),          &amp;</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;                      a_rowdepc_bo(1,1),                                &amp;</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;                      fixhd_bounda(116,1),fixhd_bounda(117,1),          &amp;</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;                      a_coldepc_bo(1,1),                                &amp;</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;                      fixhd_bounda(121,1),fixhd_bounda(122,1),          &amp;</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;                      dummy,dummy,dummy,                                &amp;</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;                      dummy,dummy,                                      &amp;</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;                      dummy,dummy,                                      &amp;</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;                      dummy,dummy,                                      &amp;</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;                      dummy,dummy,                                      &amp;</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;                      dummy,dummy,                                      &amp;</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;                      full_lookup_bounda,                               &amp;</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;                      fixhd_bounda(151,1),fixhd_bounda(152,1),          &amp;</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;                      fixhd_bounda(161,1),                              &amp;</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;                      start_block,errorstatus,cmessage)</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;        <span class="keywordflow">IF</span> (errorstatus &gt;  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&#39;INBOUNDA: Problem with READHEAD for BOUNDA(1,1)&#39;</span>)</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;          <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,I8,A,A)&#39;</span>)<span class="stringliteral">&#39;ErrorStatus &#39;</span>,errorstatus,<span class="stringliteral">&#39; cmessage &#39;</span>,&amp;</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;              cmessage</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;          <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>)</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;          <span class="keyword">WRITE</span>(cmessage,<span class="stringliteral">&#39;(A)&#39;</span>) <span class="stringliteral">&#39;Problem with READHEAD for BOUNDA(1,1)&#39;</span></div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;          <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename,errorstatus,cmessage)</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;<span class="comment">! Copy the first set of headers into LOOKUP_BOUNDA</span></div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;        <span class="keywordflow">DO</span> i=1,<a class="code" href="namespacelbc__mod.xhtml#a3d4836ab4183574e6b554577d04b1cef">rim_lookupsa</a></div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;          <span class="keywordflow">DO</span> j=1,len1_lookup</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;            lookup_bounda(j,i)=full_lookup_bounda(j,i)</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;<span class="keywordflow">          END DO</span> <span class="comment">! j</span></div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;<span class="keywordflow">        END DO</span> <span class="comment">! i</span></div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;<span class="comment">! Copy all the varying items from the LOOKUP into COMP_LOOKUP_BOUNDA</span></div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;        <span class="keywordflow">DO</span> i=1,<a class="code" href="namespacelbc__mod.xhtml#a3f4c011b8c56008d522191e4b4e9b59d">bound_lookupsa</a></div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;          lookup_comp_bounda(<a class="code" href="namespacelookup__addresses.xhtml#a47fda014213f46e5c7585eb2a83d2f70">lbcc_lbyr</a>,i)=full_lookup_bounda(<a class="code" href="namespacelookup__addresses.xhtml#aabd1e58da18c133f0ceeba0db78c9ecf">lbyr</a>,i)</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;          lookup_comp_bounda(<a class="code" href="namespacelookup__addresses.xhtml#a1c9732293e9b1ed6a1c378b20b5ec5a6">lbcc_lbmon</a>,i)=full_lookup_bounda(<a class="code" href="namespacelookup__addresses.xhtml#aeaaef1dcf94dbe6d39b5783438cdda5b">lbmon</a>,i)</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;          lookup_comp_bounda(<a class="code" href="namespacelookup__addresses.xhtml#ac5b48d2de582e0918207f92bf0b94cdd">lbcc_lbdat</a>,i)=full_lookup_bounda(<a class="code" href="namespacelookup__addresses.xhtml#ad8b62de4259cf3a7c56f0ae188e526f8">lbdat</a>,i)</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;          lookup_comp_bounda(<a class="code" href="namespacelookup__addresses.xhtml#ae119fcdbfe1cd3078c773dc7e15dea7a">lbcc_lbhr</a>,i)=full_lookup_bounda(<a class="code" href="namespacelookup__addresses.xhtml#ab2bce3bc87d25358476475aed562f068">lbhr</a>,i)</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;          lookup_comp_bounda(<a class="code" href="namespacelookup__addresses.xhtml#a93c86da291906bd2159fa1aee6289063">lbcc_lbmin</a>,i)=full_lookup_bounda(<a class="code" href="namespacelookup__addresses.xhtml#a284423d27573ccb30828cde5ff510b52">lbmin</a>,i)</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;          lookup_comp_bounda(<a class="code" href="namespacelookup__addresses.xhtml#a54153606612f4c1553cd35a9416d41e9">lbcc_lbsec</a>,i)=full_lookup_bounda(<a class="code" href="namespacelookup__addresses.xhtml#ac40a8889f8d7a68dd880a2ccc1769338">lbsec</a>,i)</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;          lookup_comp_bounda(<a class="code" href="namespacelookup__addresses.xhtml#a922d88d498da42c6f4d52665bada1c09">lbcc_lbegin</a>,i)=full_lookup_bounda(<a class="code" href="namespacelookup__addresses.xhtml#afbf7195b85d47a8f92d0769c84f846a4">lbegin</a>,i)</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;          lookup_comp_bounda(<a class="code" href="namespacelookup__addresses.xhtml#a7569c0db5fbe314cad917ec7f6fccc23">lbcc_naddr</a>,i)=full_lookup_bounda(<a class="code" href="namespacelookup__addresses.xhtml#a16f485ed422b2c5c4014cfb66960f51a">naddr</a>,i)</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;<span class="keywordflow">        END DO</span> <span class="comment">! i</span></div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;<span class="comment">! Check validity of headers</span></div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;<span class="comment">! Integer headers</span></div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;        <span class="keywordflow">IF</span> (fixhd_bounda(100,1)  &gt;   0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;          <span class="keywordflow">IF</span> (inthd_bounda(6,1) /= glsize(1,fld_type_p)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&#39;LBC Integer Header Mismatch:&#39;</span>)</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;            <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,I8)&#39;</span>)                                          &amp;</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;                <span class="stringliteral">&#39;ROW_LENGTH from INTHD: &#39;</span>,inthd_bounda(6,1)</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>)</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;            <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,I8)&#39;</span>)                                          &amp;</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;                <span class="stringliteral">&#39;Model ROW_LENGTH: &#39;</span>,glsize(1,fld_type_p)</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>)</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;            errorstatus=3</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;            <span class="keyword">WRITE</span>(cmessage,<span class="stringliteral">&#39;(A)&#39;</span>)<span class="stringliteral">&#39;Integer header (ROW_LENGTH) mismatch&#39;</span></div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;            <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename,errorstatus,cmessage)</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;          <span class="keywordflow">IF</span> (inthd_bounda(7,1) /= glsize(2,fld_type_p)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&#39;LBC Integer Header Mismatch:&#39;</span>)</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;            <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,I8)&#39;</span>) <span class="stringliteral">&#39;Number of rows from INTHD: &#39;</span>,           &amp;</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;                inthd_bounda(7,1)</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>)</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;            <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,I8)&#39;</span>) <span class="stringliteral">&#39;Model number of rows: &#39;</span>,                &amp;</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;                glsize(2,fld_type_p)</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>)</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;            errorstatus=4</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;            <span class="keyword">WRITE</span>(cmessage,<span class="stringliteral">&#39;(A)&#39;</span>)<span class="stringliteral">&#39;Integer header (N_ROWS) mismatch&#39;</span></div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;            <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename,errorstatus,cmessage)</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;          <span class="keywordflow">IF</span> ( inthd_bounda(17,1) /= a_inthd(17) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&#39;LBC Integer Header Mismatch:&#39;</span>)</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;            <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,I8)&#39;</span>) <span class="stringliteral">&#39;LBC   : Height Generator Method : &#39;</span>,            &amp;</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;                        inthd_bounda(17,1)</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>)</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;            <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,I8)&#39;</span>) <span class="stringliteral">&#39;Model : Height Generator Method : &#39;</span>,            &amp;</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;                        a_inthd(17)</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>)</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;            errorstatus=5</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;            <span class="keyword">WRITE</span> (cmessage,<span class="stringliteral">&#39;(A)&#39;</span>) <span class="stringliteral">&#39;INBOUNDA : Mis-match in height &#39;</span>//         &amp;</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;                               <span class="stringliteral">&#39;generator method.&#39;</span></div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;            <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename,errorstatus,cmessage)</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;          <span class="keywordflow">IF</span> ( inthd_bounda(24,1) /= a_inthd(24) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&#39;LBC Integer Header Mismatch:&#39;</span>)</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;            <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,I8)&#39;</span>)                                          &amp;</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;                <span class="stringliteral">&#39;LBC  : First rho level with constant height: &#39;</span>,               &amp;</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;                inthd_bounda(24,1)</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>)</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;            <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,I8)&#39;</span>)                                          &amp;</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;                <span class="stringliteral">&#39;Model: First rho level with constant height: &#39;</span>,a_inthd(24)</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>)</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;            errorstatus=6</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;            <span class="keyword">WRITE</span> (cmessage,<span class="stringliteral">&#39;(A)&#39;</span>) <span class="stringliteral">&#39;INBOUNDA : Mis-match in height &#39;</span>//         &amp;</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;                               <span class="stringliteral">&#39;generator method.&#39;</span></div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;            <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename,errorstatus,cmessage)</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;<span class="keywordflow">        END IF</span> <span class="comment">! IF (fixhd_bounda(100,1)  &gt;   0)</span></div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;<span class="comment">! Real constants</span></div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;        <span class="keywordflow">IF</span> (fixhd_bounda(105,1)  &gt;   0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;          <span class="comment">! Check real headers in LBC file against those in dump to</span></div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;          <span class="comment">! 32 bit accuracy</span></div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;          <span class="keywordflow">DO</span> j=1,6</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;            <span class="keywordflow">IF</span> (lner(realhd_bounda(j,1),a_realhd(j))) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;              <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,I8,A)&#39;</span>)                                      &amp;</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;                  <span class="stringliteral">&#39;LBC Real Header mismatch at position &#39;</span>,j,<span class="stringliteral">&#39;:&#39;</span></div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;              <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>)</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;              <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,E16.8)&#39;</span>)                                     &amp;</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;                  <span class="stringliteral">&#39;Value from LBC file is &#39;</span>,realhd_bounda(j,1)</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;              <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>)</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;              <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,E16.8)&#39;</span>)                                     &amp;</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;                  <span class="stringliteral">&#39;Value from model dump is &#39;</span>,a_realhd(j)</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;              <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>)</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;              errorstatus=7</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;              <span class="keyword">WRITE</span>(cmessage,<span class="stringliteral">&#39;(A)&#39;</span>) <span class="stringliteral">&#39;INBOUNDA : Real header mismatch&#39;</span></div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;              <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename,errorstatus,cmessage)</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;<span class="keywordflow">          END DO</span> <span class="comment">! j</span></div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;          <span class="keywordflow">IF</span> (lner(realhd_bounda(16,1),a_realhd(16))) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&#39;LBC Real Header mismatch at position 16 :&#39;</span>)</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;            <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,E16.8)&#39;</span>)<span class="stringliteral">&#39;LBC file : Height at top of model &#39;</span>,  &amp;</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;                realhd_bounda(16,1)</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>)</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;            <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,E16.8)&#39;</span>) <span class="stringliteral">&#39;Model    : Height at top of model &#39;</span>, &amp;</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;                a_realhd(16)</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>)</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;            errorstatus=8</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;            <span class="keyword">WRITE</span>(cmessage,<span class="stringliteral">&#39;(A)&#39;</span>) <span class="stringliteral">&#39;INBOUNDA : Model Height mismatch&#39;</span></div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;            <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename,errorstatus,cmessage)</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;<span class="keywordflow">        END IF</span> <span class="comment">! IF (fixhd_bounda(105,1)  &gt;   0)</span></div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;<span class="comment">! Level dependent constants</span></div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;        <span class="keywordflow">IF</span> (fixhd_bounda(110,1) &gt; 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;<span class="comment">! Check eta values for theta levels</span></div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;<span class="comment">!</span></div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;          <span class="keywordflow">DO</span> j=1, model_levels+1</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;            <span class="keywordflow">IF</span> ( lner( a_levdepc_bo(j,1),                                     &amp;</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;                       a_levdepc(jetatheta+j-1) ) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;              <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&#39;LBC Level Dependent Constants Mismatch&#39;</span>)</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;              <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,A,I8)&#39;</span>)                                      &amp;</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;                  <span class="stringliteral">&#39;Eta values for theta levels mismatch for &#39;</span>,<span class="stringliteral">&#39;level &#39;</span>,j</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;              <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>)</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;              <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,E16.8)&#39;</span>) <span class="stringliteral">&#39;Value from LBC file   : &#39;</span>,         &amp;</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;                  a_levdepc_bo(j,1)</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;              <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>)</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;              <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,E16.8)&#39;</span>) <span class="stringliteral">&#39;Value from model dump : &#39;</span>,         &amp;</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;                  a_levdepc(jetatheta+j-1)</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;              <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>)</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;              errorstatus=9</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;              <span class="keyword">WRITE</span>(cmessage,<span class="stringliteral">&#39;(A)&#39;</span>)                                            &amp;</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;                  <span class="stringliteral">&#39;INBOUNDA : Level dependent constant mismatch&#39;</span></div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;              <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename,errorstatus,cmessage)</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;<span class="keywordflow">          END DO</span> <span class="comment">! j</span></div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;<span class="comment">! ! Check eta values for rho levels</span></div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;<span class="comment">!           DO j=1, model_levels</span></div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;            <span class="keywordflow">IF</span> ( lner( a_levdepc_bo(j,2),                                      &amp;</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;                a_levdepc(jetarho+j-1) ) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;              <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>( <span class="stringliteral">&#39;LBC Level Dependent Constants Mismatch&#39;</span>)</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;              <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,A,I8)&#39;</span>)                                      &amp;</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;                  <span class="stringliteral">&#39;Eta values for rho levels mismatch for &#39;</span>,<span class="stringliteral">&#39;level &#39;</span>,j</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;              <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>)</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;              <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,E16.8)&#39;</span>) <span class="stringliteral">&#39;Value from LBC file   : &#39;</span>,         &amp;</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;                  a_levdepc_bo(j,2)</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;              <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>)</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;              <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,E16.8)&#39;</span>) <span class="stringliteral">&#39;Value from model dump : &#39;</span>,         &amp;</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;                  a_levdepc(jetarho+j-1)</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;              <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>)</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;              errorstatus=10</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;              <span class="keyword">WRITE</span>(cmessage,<span class="stringliteral">&#39;(A)&#39;</span>)                                            &amp;</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;                  <span class="stringliteral">&#39;INBOUNDA : Level dependent constant mismatch&#39;</span></div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;              <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename,errorstatus,cmessage)</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;<span class="keywordflow">          END DO</span> <span class="comment">! j</span></div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;<span class="keywordflow">        END IF</span> <span class="comment">! IF (fixhd_bounda(110,1) &gt; 0)</span></div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;<span class="comment">! Check that for variable resolution input, the LBC file has the same</span></div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;<span class="comment">! grid as the input dump</span></div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;        <span class="keywordflow">IF</span>( (a_fixhd(115) &gt; 0 .AND. a_fixhd(120) &gt; 0) .OR.              &amp;</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;            (fixhd_bounda(115,1) &gt; 0 .AND. fixhd_bounda(120,1) &gt; 0) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;          <span class="comment">! Input dump is variable resolution</span></div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;          <span class="keywordflow">IF</span> (fixhd_bounda(116,1) /= a_fixhd(116) .OR.                  &amp;</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;              fixhd_bounda(117,1) /= a_fixhd(117) .OR.                  &amp;</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;              fixhd_bounda(121,1) /= a_fixhd(121) .OR.                  &amp;</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;              fixhd_bounda(122,1) /= a_fixhd(122) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;                         <span class="keyword">WRITE</span>(cmessage,<span class="stringliteral">&#39;(A)&#39;</span>) <span class="stringliteral">&quot;Variable resolution grid &quot;</span> //        &amp;</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;              <span class="stringliteral">&quot;dimensions in LBC file do not match input dump&quot;</span></div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;            errorstatus = -10</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;            <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename, errorstatus, cmessage)</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;          <span class="keywordflow">DO</span> j = 1, a_fixhd(117)</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;            <span class="keywordflow">DO</span> i = 1, a_fixhd(116)</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;              k = (j-1) * a_fixhd(116) + i</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;              <span class="keywordflow">IF</span> (lner(a_rowdepc(k), a_rowdepc_bo(i,j))) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;                <span class="keyword">WRITE</span>(cmessage,<span class="stringliteral">&#39;(A)&#39;</span>) <span class="stringliteral">&quot;Row dependent constants &quot;</span> //     &amp;</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;              <span class="stringliteral">&quot;in LBC file do not match input dump&quot;</span></div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;                errorstatus = -11</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;                <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename, errorstatus, cmessage)</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;<span class="keywordflow">              END IF</span></div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;<span class="keywordflow">            END DO</span></div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;          <span class="keywordflow">DO</span> j = 1, a_fixhd(122)</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;            <span class="keywordflow">DO</span> i = 1, a_fixhd(121)</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;              k = (j-1) * a_fixhd(121) + i</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;              <span class="keywordflow">IF</span> (lner(a_coldepc(k), a_coldepc_bo(i,j))) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;                <span class="keyword">WRITE</span>(cmessage,<span class="stringliteral">&#39;(A)&#39;</span>) <span class="stringliteral">&quot;Column dependent constants &quot;</span> //  &amp;</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;              <span class="stringliteral">&quot;in LBC file do not match input dump&quot;</span></div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;                errorstatus = -12</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;                <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename, errorstatus, cmessage)</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;<span class="keywordflow">              END IF</span></div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;<span class="keywordflow">            END DO</span></div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;<span class="keywordflow">          END DO</span></div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;<span class="keywordflow">        END IF</span> <span class="comment">! IF variable resolution input dump</span></div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;</div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;</div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;<span class="comment">!       Set update interval</span></div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;<span class="comment">!       IF update interval includes months or years, a 360 day</span></div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;<span class="comment">!       calender assumed.</span></div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;        <span class="comment">! Save previous value of rim_stepsa:</span></div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;        <span class="keywordflow">IF</span> (.NOT.l_firstcall) rim_stepsa_old = rim_stepsa</div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;        rim_stepsa=((fixhd_bounda(35,1)*8640+fixhd_bounda(36,1)*720     &amp;</div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;         +fixhd_bounda(37,1)*24+fixhd_bounda(38,1))*3600                &amp;</div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;         +fixhd_bounda(39,1)*60+fixhd_bounda(40,1))                     &amp;</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;         *<a class="code" href="namespacenlstgen__mod.xhtml#aded406ffa8d50a7c4a6325c5b75eb03d">steps_per_periodim</a>(<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>)/<a class="code" href="namespacenlstgen__mod.xhtml#a4a6ed31ef0d09bdc976baf277d1acbe7">secs_per_periodim</a>(<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>)</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;        <span class="comment">! Check that rim_stepsa has not changed:</span></div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;        <span class="keywordflow">IF</span> (.NOT.l_firstcall) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;          <span class="keywordflow">IF</span> (rim_stepsa /= rim_stepsa_old) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;            errorstatus = 1</div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;            <span class="keyword">WRITE</span> (cmessage,<span class="stringliteral">&#39;(A,I8,A,I8,A)&#39;</span>)                            &amp;</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;            <span class="stringliteral">&#39;Boundary updating period (rim_stepsa) has changed from &#39;</span>,  &amp;</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;            rim_stepsa_old, <span class="stringliteral">&#39; to &#39;</span>, rim_stepsa, <span class="stringliteral">&#39;. Not allowed!&#39;</span></div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;            <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a> (routinename, errorstatus, cmessage)</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;</div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;        <span class="comment">! Initialise Current_LBC_Step</span></div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;</div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;        <span class="keywordflow">IF</span> (l_firstcall) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;          <a class="code" href="namespacelbc__read__data__mod.xhtml#ad6cbc4ec8581a159e30ac178e336c794">current_lbc_step</a> = 1 + stepim(<a class="code" href="namespacesubmodel__mod.xhtml#a46a6f4e4a4119ea74676854f5e7e5e2b">atmos_im</a>)</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;          <span class="keywordflow">IF</span> (<a class="code" href="namespaceumprintmgr.xhtml#a956d5068b5b528afc5bed1435ced4b99" title="$OMP THREADPRIVATE (umMessage) ">printstatus</a> &gt;= <a class="code" href="namespaceumprintmgr.xhtml#a37cb52502caf8231c6f528593a6df588">prstatus_normal</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;            <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,I8,A,I8)&#39;</span>) <span class="stringliteral">&#39; INBOUNDA : Timestep &#39;</span>,            &amp;</div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;                  stepim(<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>), <span class="stringliteral">&#39; Current_LBC_Step &#39;</span>,<a class="code" href="namespacelbc__read__data__mod.xhtml#ad6cbc4ec8581a159e30ac178e336c794">current_lbc_step</a></div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;            <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>)</div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;</div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;        <span class="keywordflow">IF</span> (<a class="code" href="namespacenlstcall__mod.xhtml#a88acd7561aab078131bb8e9e33721582">num_albcs</a> == 2 .AND. l_firstcall) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;</div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;          <span class="comment">! Calculate step on which to swap boundary files:</span></div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;          <a class="code" href="namespacelbc__read__data__mod.xhtml#afd1123b50bf611cc17a221dad3f63c3d">albc_swapstep</a> = <a class="code" href="namespacelbc__read__data__mod.xhtml#aaad0f93bd0c41249f7d0aa9549e010a9">albc2_starttime_steps</a> - rim_stepsa</div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;</div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;          <span class="comment">! Check that ALBC_SwapStep is non-negative:</span></div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;          <span class="keywordflow">IF</span> (<a class="code" href="namespacelbc__read__data__mod.xhtml#afd1123b50bf611cc17a221dad3f63c3d">albc_swapstep</a> &lt; 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;            errorstatus = 1</div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;            <span class="keyword">WRITE</span> (cmessage,<span class="stringliteral">&#39;(A,I8,A)&#39;</span>)                                 &amp;</div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;              <span class="stringliteral">&#39;Step on which to swap boundary files (ALBC_SwapStep = &#39;</span>, &amp;</div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;              <a class="code" href="namespacelbc__read__data__mod.xhtml#afd1123b50bf611cc17a221dad3f63c3d">albc_swapstep</a>, <span class="stringliteral">&#39;) must be non-negative&#39;</span></div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;</div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;            <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a> (routinename, errorstatus, cmessage)</div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;</div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;          <span class="comment">! Check that ALBC_SwapStep is a multiple of rim_stepsa:</span></div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;          <span class="keywordflow">IF</span> (mod(<a class="code" href="namespacelbc__read__data__mod.xhtml#afd1123b50bf611cc17a221dad3f63c3d">albc_swapstep</a>, rim_stepsa) /= 0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;            errorstatus = 1</div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;            <span class="keyword">WRITE</span> (cmessage,<span class="stringliteral">&#39;(A,I8,A,I8)&#39;</span>)                              &amp;</div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;              <span class="stringliteral">&#39;Step on which to swap boundary files (ALBC_SwapStep = &#39;</span>, &amp;</div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;              <a class="code" href="namespacelbc__read__data__mod.xhtml#afd1123b50bf611cc17a221dad3f63c3d">albc_swapstep</a>, <span class="stringliteral">&#39;) must be a a multiple of the boundary &#39;</span>//&amp;</div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;              <span class="stringliteral">&#39;updating period (rim_stepsa = &#39;</span>, rim_stepsa, <span class="stringliteral">&#39;)&#39;</span></div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;            errorstatus=101</div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;</div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;            <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a> (routinename, errorstatus, cmessage)</div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;</div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;</div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;<span class="keywordflow">      END IF</span></div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;</div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;<span class="comment">!   2   Set interval for setting any boundary field</span></div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;</div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;      boundary_stepsim(<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>) = rim_stepsa</div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;</div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;<span class="comment">!   3    Check LOOKUP Table</span></div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;</div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;      j1=0</div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;      <span class="keywordflow">IF</span> (.NOT. (model_domain == <a class="code" href="namespacedomain__params.xhtml#aa92f3e4322e3a83dea3552093c437600">mt_bi_cyclic_lam</a> .OR.                  &amp;</div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;          model_domain == <a class="code" href="namespacedomain__params.xhtml#a461a75f256e4989e92e829eb45b0cd15">mt_cyclic_lam</a>    .OR.                         &amp;</div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;          l_force_lbc .OR. l_fixed_lbcs) ) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;        j1=fixhd_bounda(152,1)</div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;</div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;        <span class="keywordflow">IF</span>(fixhd_bounda(150,1) &gt;  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;</div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;<span class="comment">! Set up list of variables expected to be boundary updated.</span></div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;          item_bounda(1)  = 31001 <span class="comment">! Orography</span></div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;          item_bounda(2)  = 31002 <span class="comment">! U</span></div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;          item_bounda(3)  = 31003 <span class="comment">! V</span></div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;          item_bounda(4)  = 31004 <span class="comment">! W</span></div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;          item_bounda(5)  = 31005 <span class="comment">! Density</span></div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;          item_bounda(6)  = 31006 <span class="comment">! Potential temperature</span></div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;          item_bounda(7)  = 31007 <span class="comment">! Specific humidity</span></div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;          item_bounda(8)  = 31008 <span class="comment">! QCL</span></div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;          item_bounda(9)  = 31009 <span class="comment">! QCF</span></div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;          item_bounda(10) = 31010 <span class="comment">! Exner</span></div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;          item_bounda(11) = 31011 <span class="comment">! U_Adv</span></div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;          item_bounda(12) = 31012 <span class="comment">! V_Adv</span></div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;          item_bounda(13) = 31013 <span class="comment">! W Adv</span></div><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;</div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;<span class="comment">! Include additional microphysics lbcs IF active</span></div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;</div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;          lbc_num = 13</div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;          <span class="keywordflow">IF</span> (<a class="code" href="namespacemphys__inputs__mod.xhtml#ad7a185633b19aced8c7ee7a44a2026cb">l_mcr_qcf2_lbc</a>) <span class="keywordflow">THEN</span>  <span class="comment">! qcf2 lbcs active</span></div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;            lbc_num = lbc_num + 1</div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;            item_bounda(lbc_num) = 31014</div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;          <span class="keywordflow">IF</span> (<a class="code" href="namespacemphys__inputs__mod.xhtml#aa35a37d47ad08e8b5cc1390e7a5b4eb0">l_mcr_qrain_lbc</a>) <span class="keywordflow">THEN</span>  <span class="comment">! qrain lbcs active</span></div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;            lbc_num = lbc_num + 1</div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;            item_bounda(lbc_num) = 31015</div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;          <span class="keywordflow">IF</span> (<a class="code" href="namespacemphys__inputs__mod.xhtml#a6cc9d6c615bc5b63edba595a217f3ee8">l_mcr_qgraup_lbc</a>) <span class="keywordflow">THEN</span>  <span class="comment">! qgraup lbcs active</span></div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;            lbc_num = lbc_num + 1</div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;            item_bounda(lbc_num) = 31016</div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;</div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;          <span class="comment">! Setup for additional cloud fraction lbcs IF active</span></div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;          <span class="keywordflow">IF</span> (<a class="code" href="namespacecloud__inputs__mod.xhtml#a0f7c97dbc58534b4ed8a3510e9b17061">l_pc2_lbc</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;           lbc_num = lbc_num+1</div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;           item_bounda(lbc_num) = 31017 <span class="comment">! cf_bulk</span></div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;           lbc_num = lbc_num+1</div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;           item_bounda(lbc_num) = 31018 <span class="comment">! cf_liquid</span></div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;           lbc_num = lbc_num+1</div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;           item_bounda(lbc_num) = 31019 <span class="comment">! cf_frozen</span></div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;</div><div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;          <span class="comment">! Include murk aerosol lbcs IF in input lbc file</span></div><div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;          <span class="keywordflow">IF</span> (<a class="code" href="namespacemurk__inputs__mod.xhtml#a3d09955720c1dac82527fd9fcc7af728">l_murk_lbc</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;            lbc_num = lbc_num + 1</div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;            item_bounda(lbc_num) = 31020 <span class="comment">! murk aerosol</span></div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;</div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;          <span class="comment">! Include dust lbcs IF in input lbc file</span></div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;          <span class="keywordflow">IF</span> (<a class="code" href="namespaceum__input__control__mod.xhtml#a982e30d27f2071480a759de633683b3d">l_dust_div1_lbc</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;            lbc_num = lbc_num + 1</div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;            item_bounda(lbc_num) = 31023 <span class="comment">! dust_div1</span></div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;          <span class="comment">! Include dust lbcs IF in input lbc file</span></div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;          <span class="keywordflow">IF</span> (<a class="code" href="namespaceum__input__control__mod.xhtml#a284106535ce7a70bc22025068c984135">l_dust_div2_lbc</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;            lbc_num = lbc_num + 1</div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;            item_bounda(lbc_num) = 31024 <span class="comment">! dust_div2</span></div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;          <span class="comment">! Include dust lbcs IF in input lbc file</span></div><div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;          <span class="keywordflow">IF</span> (<a class="code" href="namespaceum__input__control__mod.xhtml#a17dc07ba449d9327ad8e4c9725b49367">l_dust_div3_lbc</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;            lbc_num = lbc_num + 1</div><div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;            item_bounda(lbc_num) = 31025 <span class="comment">! dust_div3</span></div><div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;          <span class="comment">! Include dust lbcs IF in input lbc file</span></div><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;          <span class="keywordflow">IF</span> (<a class="code" href="namespaceum__input__control__mod.xhtml#ae2b5bbafde91cf6492b665ebf67514ec">l_dust_div4_lbc</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;            lbc_num = lbc_num + 1</div><div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;            item_bounda(lbc_num) = 31026 <span class="comment">! dust_div4</span></div><div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;          <span class="comment">! Include dust lbcs IF in input lbc file</span></div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;          <span class="keywordflow">IF</span> (<a class="code" href="namespaceum__input__control__mod.xhtml#a4ebbfaf732b2ae27848fb173aa2348b5">l_dust_div5_lbc</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;            lbc_num = lbc_num + 1</div><div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;            item_bounda(lbc_num) = 31027 <span class="comment">! dust_div5</span></div><div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;          <span class="comment">! Include dust lbcs IF in input lbc file</span></div><div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;          <span class="keywordflow">IF</span> (<a class="code" href="namespaceum__input__control__mod.xhtml#a830b1a550adc0d8bdb6a4f546208617f">l_dust_div6_lbc</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;            lbc_num = lbc_num + 1</div><div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;            item_bounda(lbc_num) = 31028 <span class="comment">! dust_div6</span></div><div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;</div><div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;          <span class="comment">! Include so2 lbcs IF in input lbc file</span></div><div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;          <span class="keywordflow">IF</span> (<a class="code" href="namespaceum__input__control__mod.xhtml#a7b7f4fc8e5cac7ae5daba6867763b636">l_so2_lbc</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;            lbc_num = lbc_num + 1</div><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;            item_bounda(lbc_num) = 31029 <span class="comment">! so2</span></div><div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;</div><div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;          <span class="comment">! Include dms lbcs IF in input lbc file</span></div><div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;          <span class="keywordflow">IF</span> (<a class="code" href="namespaceum__input__control__mod.xhtml#ae5259f1b72d7c605cfd965eab5b48404">l_dms_lbc</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;            lbc_num = lbc_num + 1</div><div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;            item_bounda(lbc_num) = 31030 <span class="comment">! dms</span></div><div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;</div><div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;          <span class="comment">! Include so4_aitken lbcs IF in input lbc file</span></div><div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;          <span class="keywordflow">IF</span> (l_so4_aitken_lbc) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;            lbc_num = lbc_num + 1</div><div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;            item_bounda(lbc_num) = 31031 <span class="comment">! so4_aitken</span></div><div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;          <span class="comment">! Include so4_accu lbcs IF in input lbc file</span></div><div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;          <span class="keywordflow">IF</span> (<a class="code" href="namespaceum__input__control__mod.xhtml#ab4cbe6e1ba9e73efc0a427893ce28e7c">l_so4_accu_lbc</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;            lbc_num = lbc_num + 1</div><div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;            item_bounda(lbc_num) = 31032 <span class="comment">! so4_accu</span></div><div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;          <span class="comment">! Include so4_diss lbcs IF in input lbc file</span></div><div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;          <span class="keywordflow">IF</span> (<a class="code" href="namespaceum__input__control__mod.xhtml#a5433e471ae4070898840f278d3fc49ae">l_so4_diss_lbc</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;            lbc_num = lbc_num + 1</div><div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;            item_bounda(lbc_num) = 31033 <span class="comment">! so4_diss</span></div><div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;           <span class="comment">! Include nh3 lbcs IF in input lbc file</span></div><div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;          <span class="keywordflow">IF</span> (<a class="code" href="namespaceum__input__control__mod.xhtml#aaea0ea78977b44ecf186f27e2fe7e663">l_nh3_lbc</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;            lbc_num = lbc_num + 1</div><div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;            item_bounda(lbc_num) = 31035 <span class="comment">! nh3</span></div><div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;</div><div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;          <span class="comment">! Include soot_new lbcs IF in input lbc file</span></div><div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;          <span class="keywordflow">IF</span> (<a class="code" href="namespaceum__input__control__mod.xhtml#a9b068bdc934eeb5d0cbc08f078736354">l_soot_new_lbc</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;            lbc_num = lbc_num + 1</div><div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;            item_bounda(lbc_num) = 31036 <span class="comment">! soot_new</span></div><div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;          <span class="comment">! Include soot_agd lbcs IF in input lbc file</span></div><div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;          <span class="keywordflow">IF</span> (<a class="code" href="namespaceum__input__control__mod.xhtml#ad97981f0b4263f64e1c1d2ba8e0913c5">l_soot_agd_lbc</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;            lbc_num = lbc_num + 1</div><div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;            item_bounda(lbc_num) = 31037 <span class="comment">! soot_agd</span></div><div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;          <span class="comment">! Include soot_cld lbcs IF in input lbc file</span></div><div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;          <span class="keywordflow">IF</span> (<a class="code" href="namespaceum__input__control__mod.xhtml#ac5604d3a9c8d86455ca770936b94e059">l_soot_cld_lbc</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;            lbc_num = lbc_num + 1</div><div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;            item_bounda(lbc_num) = 31038 <span class="comment">! soot_cld</span></div><div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;         <span class="comment">! Include bmass_new lbcs IF in input lbc file</span></div><div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;          <span class="keywordflow">IF</span> (<a class="code" href="namespaceum__input__control__mod.xhtml#a11a0ec37d896fd60560db565508970bf">l_bmass_new_lbc</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;            lbc_num = lbc_num + 1</div><div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;            item_bounda(lbc_num) = 31039 <span class="comment">! bmass_new</span></div><div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;          <span class="comment">! Include bmass_agd lbcs IF in input lbc file</span></div><div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;          <span class="keywordflow">IF</span> (<a class="code" href="namespaceum__input__control__mod.xhtml#a0d02c8f5f0fc85414be3215c13583176">l_bmass_agd_lbc</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;            lbc_num = lbc_num + 1</div><div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;            item_bounda(lbc_num) = 31040 <span class="comment">! bmass_agd</span></div><div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;          <span class="comment">! Include bmass_cld lbcs IF in input lbc file</span></div><div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;          <span class="keywordflow">IF</span> (<a class="code" href="namespaceum__input__control__mod.xhtml#a6766618ef656027adf9a1bf738a3d45e">l_bmass_cld_lbc</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;            lbc_num = lbc_num + 1</div><div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;            item_bounda(lbc_num) = 31041 <span class="comment">! bmass_cld</span></div><div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;</div><div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;          <span class="comment">! Include ocff_new lbcs IF in input lbc file</span></div><div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;          <span class="keywordflow">IF</span> (<a class="code" href="namespaceum__input__control__mod.xhtml#af5ce281d0c9cfdc131210e54912c26ad">l_ocff_new_lbc</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;            lbc_num = lbc_num + 1</div><div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;            item_bounda(lbc_num) = 31042 <span class="comment">! ocff_new</span></div><div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;          <span class="comment">! Include ocff_agd lbcs IF in input lbc file</span></div><div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;          <span class="keywordflow">IF</span> (<a class="code" href="namespaceum__input__control__mod.xhtml#a893949e0aa5eb5086e4064b41a24fa50">l_ocff_agd_lbc</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;            lbc_num = lbc_num + 1</div><div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;            item_bounda(lbc_num) = 31043 <span class="comment">! ocff_agd</span></div><div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;          <span class="comment">! Include ocff_cld lbcs IF in input lbc file</span></div><div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;          <span class="keywordflow">IF</span> (<a class="code" href="namespaceum__input__control__mod.xhtml#a3ee37d136478006737eb7739d3d5fb62">l_ocff_cld_lbc</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;            lbc_num = lbc_num + 1</div><div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;            item_bounda(lbc_num) = 31044 <span class="comment">! ocff_cld</span></div><div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;</div><div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;          <span class="comment">! Include nitr_acc lbcs IF in input lbc file</span></div><div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;          <span class="keywordflow">IF</span> (<a class="code" href="namespaceum__input__control__mod.xhtml#a1f61a6c038dfb6c2f0e374d64907c349">l_nitr_acc_lbc</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;            lbc_num = lbc_num + 1</div><div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;            item_bounda(lbc_num) = 31045 <span class="comment">! nitr_new</span></div><div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;          <span class="comment">! Include nitr_diss lbcs IF in input lbc file</span></div><div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;          <span class="keywordflow">IF</span> (<a class="code" href="namespaceum__input__control__mod.xhtml#a1e941cb6ee61cf94de25501cd26309d4">l_nitr_diss_lbc</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;            lbc_num = lbc_num + 1</div><div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;            item_bounda(lbc_num) = 31046 <span class="comment">! nitr_diss</span></div><div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;</div><div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;          <span class="comment">! Free tracer LBCs</span></div><div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;          <span class="keywordflow">IF</span> (tr_lbc_vars &gt; 0) <span class="keywordflow">THEN</span>                                                                                                               <span class="comment">! Set item_bounda to STASH item codes read in from the            ! file so that the user only needs to specify the total            ! number of tracer lbcs</span></div><div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;</div><div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;            <span class="keywordflow">Do</span> i = 1, tr_lbc_vars              item_bounda(lbc_num+i)=sect36 + a_tr_lbc_stashitem(i)</div><div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;              <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A,I8,I8)&#39;</span>) <span class="stringliteral">&#39;INBOUNDA (free):&#39;</span>,lbc_num+i,       &amp;</div><div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;                  item_bounda(lbc_num+i)</div><div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;              <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>)</div><div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;<span class="keywordflow">            END DO</span>                                                          lbc_num = lbc_num + tr_lbc_vars</div><div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;<span class="keywordflow">                                                                             END IF</span>             </div><div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;<span class="comment">!          IF (TR_VARS  &gt;   0) THEN</span></div><div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;</div><div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;            <span class="comment">! Find STASH item no. for each tracer in use</span></div><div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;<span class="comment">!            i=0</span></div><div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;<span class="comment">!            im_index=internal_model_index(A_IM)</span></div><div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;<span class="comment">!            DO j = A_TRACER_FIRST,A_TRACER_LAST</span></div><div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;<span class="comment">!              IF (SI(j,0,im_index) /= 1) THEN  ! tracer is in use</span></div><div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;<span class="comment">!                i=i+1</span></div><div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;<span class="comment">!                item_bounda(lbc_num+i)=31100+(j-A_TRACER_FIRST)</span></div><div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;<span class="comment">!              END IF</span></div><div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;<span class="comment">!            END DO ! j</span></div><div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;</div><div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;<span class="comment">!          END IF ! IF (TR_VARS  &gt;   0)</span></div><div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;</div><div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;          <span class="comment">! UKCA tracer LBCs</span></div><div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;          <span class="keywordflow">IF</span> (tr_lbc_ukca &gt; 0) <span class="keywordflow">THEN</span>                                                                                                               <span class="comment">! Set item_bounda to STASH item codes read in from the            ! file so that the user only needs to specify the total            ! number of tracer lbcs</span></div><div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;            <span class="keywordflow">Do</span> i = 1, tr_lbc_ukca              item_bounda(lbc_num+i)=sect37 + ukca_tr_lbc_stashitem(i)</div><div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;              <span class="keyword">WRITE</span>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>,<span class="stringliteral">&#39;(A, I8, I8)&#39;</span>) <span class="stringliteral">&#39;INBOUNDA (ukca):&#39;</span>,lbc_num+i,     &amp;</div><div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;                  item_bounda(lbc_num+i)</div><div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;              <span class="keyword">CALL </span><a class="code" href="namespaceumprintmgr.xhtml#aae44897e556705dbf5e945a26538be9a">umprint</a>(<a class="code" href="namespaceumprintmgr.xhtml#a38275af5a575d53ab2b03beb38d249b5">ummessage</a>)</div><div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;<span class="keywordflow">            END DO</span><span class="keywordflow">                                                                                                                           END IF</span>             </div><div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;</div><div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;<span class="comment">! DEPENDS ON: chk_look_bounda</span></div><div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;          <span class="keyword">CALL </span><a class="code" href="chk__look__bounda_8f90.xhtml#a325efe7c420916931233df7607dbdbe8" title="Subroutine CHK_LOOK_BOUNDA. ">chk_look_bounda</a>(                                         &amp;</div><div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160;            item_bounda,full_lookup_bounda,                             &amp;</div><div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160;<span class="preprocessor">#include &quot;argbnd.h&quot;</span></div><div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160;<span class="preprocessor"></span>                               errorstatus,cmessage)</div><div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160;</div><div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;          <span class="keywordflow">IF</span> (errorstatus  /=  0) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;<span class="comment">! Use message returned by chk_look_bounda in CALL to ereport</span></div><div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;</div><div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160;            <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a>(routinename,errorstatus,cmessage)</div><div class="line"><a name="l00836"></a><span class="lineno">  836</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00837"></a><span class="lineno">  837</span>&#160;</div><div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160;<span class="comment">!  Find start position in lookup tables</span></div><div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;</div><div class="line"><a name="l00840"></a><span class="lineno">  840</span>&#160;          <span class="comment">! Get days/seconds since basis time:</span></div><div class="line"><a name="l00841"></a><span class="lineno">  841</span>&#160;<span class="comment">! DEPENDS ON: time2sec</span></div><div class="line"><a name="l00842"></a><span class="lineno">  842</span>&#160;          <span class="keyword">CALL </span>time2sec (i_year,             i_month,                   &amp;</div><div class="line"><a name="l00843"></a><span class="lineno">  843</span>&#160;                         i_day,              i_hour,                    &amp;</div><div class="line"><a name="l00844"></a><span class="lineno">  844</span>&#160;                         i_minute,           i_second,                  &amp;</div><div class="line"><a name="l00845"></a><span class="lineno">  845</span>&#160;                         basis_time_days,    basis_time_secs,           &amp;</div><div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160;                         elapsed_days,       elapsed_secs,              &amp;</div><div class="line"><a name="l00847"></a><span class="lineno">  847</span>&#160;                         <a class="code" href="namespaceum__input__control__mod.xhtml#a9379d2394efa879a4fbd3be4ea34b035">lcal360</a>)</div><div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;          <span class="comment">! Get current model time in days/seconds-in-day:</span></div><div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;          current_time_days = basis_time_days + elapsed_days +          &amp;</div><div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;                             (basis_time_secs + elapsed_secs)/86400</div><div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160;</div><div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160;          current_time_secs = mod(basis_time_secs+elapsed_secs, 86400)</div><div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;</div><div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;          <span class="comment">! Get days/seconds to start of boundary data:</span></div><div class="line"><a name="l00855"></a><span class="lineno">  855</span>&#160;<span class="comment">! DEPENDS ON: time2sec</span></div><div class="line"><a name="l00856"></a><span class="lineno">  856</span>&#160;          <span class="keyword">CALL </span>time2sec (fixhd_bounda(21,1), fixhd_bounda(22,1),        &amp;</div><div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;                         fixhd_bounda(23,1), fixhd_bounda(24,1),        &amp;</div><div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;                         fixhd_bounda(25,1), fixhd_bounda(26,1),        &amp;</div><div class="line"><a name="l00859"></a><span class="lineno">  859</span>&#160;                         current_time_days,  current_time_secs,         &amp;</div><div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160;                         days_to_data_start, secs_to_data_start,        &amp;</div><div class="line"><a name="l00861"></a><span class="lineno">  861</span>&#160;                         <a class="code" href="namespaceum__input__control__mod.xhtml#a9379d2394efa879a4fbd3be4ea34b035">lcal360</a>)</div><div class="line"><a name="l00862"></a><span class="lineno">  862</span>&#160;</div><div class="line"><a name="l00863"></a><span class="lineno">  863</span>&#160;          <span class="comment">! Get days/seconds to end of boundary data:</span></div><div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160;<span class="comment">! DEPENDS ON: time2sec</span></div><div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;          <span class="keyword">CALL </span>time2sec (fixhd_bounda(28,1), fixhd_bounda(29,1),        &amp;</div><div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160;                         fixhd_bounda(30,1), fixhd_bounda(31,1),        &amp;</div><div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;                         fixhd_bounda(32,1), fixhd_bounda(33,1),        &amp;</div><div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;                         current_time_days,  current_time_secs,         &amp;</div><div class="line"><a name="l00869"></a><span class="lineno">  869</span>&#160;                         days_to_data_end,   secs_to_data_end,          &amp;</div><div class="line"><a name="l00870"></a><span class="lineno">  870</span>&#160;                         <a class="code" href="namespaceum__input__control__mod.xhtml#a9379d2394efa879a4fbd3be4ea34b035">lcal360</a>)</div><div class="line"><a name="l00871"></a><span class="lineno">  871</span>&#160;</div><div class="line"><a name="l00872"></a><span class="lineno">  872</span>&#160;          <span class="comment">! Get steps to start of boundary data:</span></div><div class="line"><a name="l00873"></a><span class="lineno">  873</span>&#160;<span class="comment">! DEPENDS ON: tim2step</span></div><div class="line"><a name="l00874"></a><span class="lineno">  874</span>&#160;          <span class="keyword">CALL </span><a class="code" href="tim2step_8f90.xhtml#a25b0fe44ee11a1efa01f798dccb79624" title="LL Routine: TIM2STEP !&gt;LL. ">tim2step</a> (days_to_data_start,                            &amp;</div><div class="line"><a name="l00875"></a><span class="lineno">  875</span>&#160;                         secs_to_data_start,                            &amp;</div><div class="line"><a name="l00876"></a><span class="lineno">  876</span>&#160;                         <a class="code" href="namespacenlstgen__mod.xhtml#aded406ffa8d50a7c4a6325c5b75eb03d">steps_per_periodim</a>(<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>),                      &amp;</div><div class="line"><a name="l00877"></a><span class="lineno">  877</span>&#160;                         <a class="code" href="namespacenlstgen__mod.xhtml#a4a6ed31ef0d09bdc976baf277d1acbe7">secs_per_periodim</a>(<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>),                       &amp;</div><div class="line"><a name="l00878"></a><span class="lineno">  878</span>&#160;                         steps_to_data_start)</div><div class="line"><a name="l00879"></a><span class="lineno">  879</span>&#160;</div><div class="line"><a name="l00880"></a><span class="lineno">  880</span>&#160;          <span class="comment">! Get steps to end of boundary data:</span></div><div class="line"><a name="l00881"></a><span class="lineno">  881</span>&#160;<span class="comment">! DEPENDS ON: tim2step</span></div><div class="line"><a name="l00882"></a><span class="lineno">  882</span>&#160;          <span class="keyword">CALL </span><a class="code" href="tim2step_8f90.xhtml#a25b0fe44ee11a1efa01f798dccb79624" title="LL Routine: TIM2STEP !&gt;LL. ">tim2step</a> (days_to_data_end,                              &amp;</div><div class="line"><a name="l00883"></a><span class="lineno">  883</span>&#160;                         secs_to_data_end,                              &amp;</div><div class="line"><a name="l00884"></a><span class="lineno">  884</span>&#160;                         <a class="code" href="namespacenlstgen__mod.xhtml#aded406ffa8d50a7c4a6325c5b75eb03d">steps_per_periodim</a>(<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>),                      &amp;</div><div class="line"><a name="l00885"></a><span class="lineno">  885</span>&#160;                         <a class="code" href="namespacenlstgen__mod.xhtml#a4a6ed31ef0d09bdc976baf277d1acbe7">secs_per_periodim</a>(<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>),                       &amp;</div><div class="line"><a name="l00886"></a><span class="lineno">  886</span>&#160;                         steps_to_data_end)</div><div class="line"><a name="l00887"></a><span class="lineno">  887</span>&#160;</div><div class="line"><a name="l00888"></a><span class="lineno">  888</span>&#160;          <span class="comment">! Get steps from basis time to start of boundary data:</span></div><div class="line"><a name="l00889"></a><span class="lineno">  889</span>&#160;          basis_to_data_start_steps = stepim(<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>) + steps_to_data_start</div><div class="line"><a name="l00890"></a><span class="lineno">  890</span>&#160;</div><div class="line"><a name="l00891"></a><span class="lineno">  891</span>&#160;          <span class="comment">! Check that the above is a multiple of rim_stepsa only</span></div><div class="line"><a name="l00892"></a><span class="lineno">  892</span>&#160;          <span class="comment">! when two boundary files exist</span></div><div class="line"><a name="l00893"></a><span class="lineno">  893</span>&#160;          <span class="keywordflow">IF</span> ((<a class="code" href="namespacenlstcall__mod.xhtml#a88acd7561aab078131bb8e9e33721582">num_albcs</a> == 2) .AND.                                    &amp;</div><div class="line"><a name="l00894"></a><span class="lineno">  894</span>&#160;              (mod(basis_to_data_start_steps, rim_stepsa) /= 0)) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00895"></a><span class="lineno">  895</span>&#160;            errorstatus = 1</div><div class="line"><a name="l00896"></a><span class="lineno">  896</span>&#160;            <span class="keyword">WRITE</span> (cmessage,<span class="stringliteral">&#39;(A,I8,A,I8,A)&#39;</span>)                            &amp;</div><div class="line"><a name="l00897"></a><span class="lineno">  897</span>&#160;              <span class="stringliteral">&#39;Steps from basis time to start of boundary data (&#39;</span>,      &amp;</div><div class="line"><a name="l00898"></a><span class="lineno">  898</span>&#160;              basis_to_data_start_steps, <span class="stringliteral">&#39;) must be a multiple of &#39;</span>//   &amp;</div><div class="line"><a name="l00899"></a><span class="lineno">  899</span>&#160;              <span class="stringliteral">&#39;the boundary updating period (&#39;</span>, rim_stepsa, <span class="stringliteral">&#39;)&#39;</span></div><div class="line"><a name="l00900"></a><span class="lineno">  900</span>&#160;</div><div class="line"><a name="l00901"></a><span class="lineno">  901</span>&#160;            <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a> (routinename, errorstatus, cmessage)</div><div class="line"><a name="l00902"></a><span class="lineno">  902</span>&#160;<span class="keywordflow">          END IF</span></div><div class="line"><a name="l00903"></a><span class="lineno">  903</span>&#160;</div><div class="line"><a name="l00904"></a><span class="lineno">  904</span>&#160;          <span class="comment">! There are two situations we need to cater for here:</span></div><div class="line"><a name="l00905"></a><span class="lineno">  905</span>&#160;          <span class="comment">!</span></div><div class="line"><a name="l00906"></a><span class="lineno">  906</span>&#160;          <span class="comment">!   1. There is no boundary data in memory.</span></div><div class="line"><a name="l00907"></a><span class="lineno">  907</span>&#160;          <span class="comment">!   2. The boundary data valid at the start of the current</span></div><div class="line"><a name="l00908"></a><span class="lineno">  908</span>&#160;          <span class="comment">!      boundary data interval is already in memory, but</span></div><div class="line"><a name="l00909"></a><span class="lineno">  909</span>&#160;          <span class="comment">!      data for the end of the interval needs to be read in.</span></div><div class="line"><a name="l00910"></a><span class="lineno">  910</span>&#160;          <span class="comment">!</span></div><div class="line"><a name="l00911"></a><span class="lineno">  911</span>&#160;          <span class="comment">! The first case applies IF and only IF we are on the first</span></div><div class="line"><a name="l00912"></a><span class="lineno">  912</span>&#160;          <span class="comment">! CALL to this routine.</span></div><div class="line"><a name="l00913"></a><span class="lineno">  913</span>&#160;          <span class="comment">!</span></div><div class="line"><a name="l00914"></a><span class="lineno">  914</span>&#160;          <span class="comment">! In the first case, we need to make sure that there is</span></div><div class="line"><a name="l00915"></a><span class="lineno">  915</span>&#160;          <span class="comment">! boundary data valid at the start of the current boundary</span></div><div class="line"><a name="l00916"></a><span class="lineno">  916</span>&#160;          <span class="comment">! data interval, and THEN point to it. We also need to make</span></div><div class="line"><a name="l00917"></a><span class="lineno">  917</span>&#160;          <span class="comment">! sure that data is available for the end of the interval. The</span></div><div class="line"><a name="l00918"></a><span class="lineno">  918</span>&#160;          <span class="comment">! only exception to the latter is the case where the data for</span></div><div class="line"><a name="l00919"></a><span class="lineno">  919</span>&#160;          <span class="comment">! the end of the interval is to come from a different boundary</span></div><div class="line"><a name="l00920"></a><span class="lineno">  920</span>&#160;          <span class="comment">! file, which may be the case IF two boundary files are being</span></div><div class="line"><a name="l00921"></a><span class="lineno">  921</span>&#160;          <span class="comment">! used.</span></div><div class="line"><a name="l00922"></a><span class="lineno">  922</span>&#160;          <span class="comment">!</span></div><div class="line"><a name="l00923"></a><span class="lineno">  923</span>&#160;          <span class="comment">! In the second case, we need to make sure that there is</span></div><div class="line"><a name="l00924"></a><span class="lineno">  924</span>&#160;          <span class="comment">! boundary data valid at the end of the current boundary data</span></div><div class="line"><a name="l00925"></a><span class="lineno">  925</span>&#160;          <span class="comment">! interval, and THEN point to it.</span></div><div class="line"><a name="l00926"></a><span class="lineno">  926</span>&#160;</div><div class="line"><a name="l00927"></a><span class="lineno">  927</span>&#160;          <span class="comment">! Steps to start of current boundary data interval:</span></div><div class="line"><a name="l00928"></a><span class="lineno">  928</span>&#160;          steps_to_bdi_start = mod(basis_to_data_start_steps,           &amp;</div><div class="line"><a name="l00929"></a><span class="lineno">  929</span>&#160;                                   rim_stepsa)</div><div class="line"><a name="l00930"></a><span class="lineno">  930</span>&#160;</div><div class="line"><a name="l00931"></a><span class="lineno">  931</span>&#160;          <span class="comment">! Steps to end   of current boundary data interval:</span></div><div class="line"><a name="l00932"></a><span class="lineno">  932</span>&#160;          steps_to_bdi_end   = steps_to_bdi_start + rim_stepsa</div><div class="line"><a name="l00933"></a><span class="lineno">  933</span>&#160;</div><div class="line"><a name="l00934"></a><span class="lineno">  934</span>&#160;          <span class="comment">! Initialise BNDARY_OFFSET for use in CTIME comdeck</span></div><div class="line"><a name="l00935"></a><span class="lineno">  935</span>&#160;          bndary_offsetim(<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>) = mod(-basis_to_data_start_steps,       &amp;</div><div class="line"><a name="l00936"></a><span class="lineno">  936</span>&#160;                                       rim_stepsa)</div><div class="line"><a name="l00937"></a><span class="lineno">  937</span>&#160;</div><div class="line"><a name="l00938"></a><span class="lineno">  938</span>&#160;          <span class="keywordflow">IF</span> (l_firstcall) <span class="keywordflow">THEN</span> <span class="comment">! Case 1</span></div><div class="line"><a name="l00939"></a><span class="lineno">  939</span>&#160;</div><div class="line"><a name="l00940"></a><span class="lineno">  940</span>&#160;            <span class="keywordflow">IF</span> (steps_to_data_start &lt;= steps_to_bdi_start .AND.         &amp;</div><div class="line"><a name="l00941"></a><span class="lineno">  941</span>&#160;                steps_to_data_end   &gt;= steps_to_bdi_start) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00942"></a><span class="lineno">  942</span>&#160;              nbound_lookup(1) = (-steps_to_data_start / rim_stepsa)    &amp;</div><div class="line"><a name="l00943"></a><span class="lineno">  943</span>&#160;                               * (<a class="code" href="namespacelbc__mod.xhtml#a3d4836ab4183574e6b554577d04b1cef">rim_lookupsa</a>-1) + 2</div><div class="line"><a name="l00944"></a><span class="lineno">  944</span>&#160;            <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (steps_to_data_start &gt; steps_to_bdi_start) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00945"></a><span class="lineno">  945</span>&#160;              errorstatus = 101</div><div class="line"><a name="l00946"></a><span class="lineno">  946</span>&#160;              <span class="keyword">WRITE</span> (cmessage,<span class="stringliteral">&#39;(A)&#39;</span>)                                    &amp;</div><div class="line"><a name="l00947"></a><span class="lineno">  947</span>&#160;                <span class="stringliteral">&#39;Boundary data starts after start of current &#39;</span>//        &amp;</div><div class="line"><a name="l00948"></a><span class="lineno">  948</span>&#160;                <span class="stringliteral">&#39;boundary data interval&#39;</span></div><div class="line"><a name="l00949"></a><span class="lineno">  949</span>&#160;</div><div class="line"><a name="l00950"></a><span class="lineno">  950</span>&#160;              <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a> (routinename, errorstatus, cmessage)</div><div class="line"><a name="l00951"></a><span class="lineno">  951</span>&#160;            <span class="keywordflow">ELSE</span></div><div class="line"><a name="l00952"></a><span class="lineno">  952</span>&#160;              errorstatus = 102</div><div class="line"><a name="l00953"></a><span class="lineno">  953</span>&#160;              <span class="keyword">WRITE</span> (cmessage,<span class="stringliteral">&#39;(A)&#39;</span>)                                    &amp;</div><div class="line"><a name="l00954"></a><span class="lineno">  954</span>&#160;                <span class="stringliteral">&#39;Boundary data ends before start of current &#39;</span>//         &amp;</div><div class="line"><a name="l00955"></a><span class="lineno">  955</span>&#160;                <span class="stringliteral">&#39;boundary data interval&#39;</span></div><div class="line"><a name="l00956"></a><span class="lineno">  956</span>&#160;</div><div class="line"><a name="l00957"></a><span class="lineno">  957</span>&#160;              <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a> (routinename, errorstatus, cmessage)</div><div class="line"><a name="l00958"></a><span class="lineno">  958</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00959"></a><span class="lineno">  959</span>&#160;</div><div class="line"><a name="l00960"></a><span class="lineno">  960</span>&#160;            <span class="comment">! Is the data for the end of the current boundary data</span></div><div class="line"><a name="l00961"></a><span class="lineno">  961</span>&#160;            <span class="comment">! interval to come from the same boundary file?</span></div><div class="line"><a name="l00962"></a><span class="lineno">  962</span>&#160;            this_albc_for_bdi_end =.true.</div><div class="line"><a name="l00963"></a><span class="lineno">  963</span>&#160;            <span class="keywordflow">IF</span> (<a class="code" href="namespacenlstcall__mod.xhtml#a88acd7561aab078131bb8e9e33721582">num_albcs</a> == 2) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00964"></a><span class="lineno">  964</span>&#160;              <span class="keywordflow">IF</span> (stepim(<a class="code" href="namespacesubmodel__mod.xhtml#ae72bf5d9dbbc3029ed7107c47edd59e3">a_im</a>) &lt;= <a class="code" href="namespacelbc__read__data__mod.xhtml#afd1123b50bf611cc17a221dad3f63c3d">albc_swapstep</a>) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00965"></a><span class="lineno">  965</span>&#160;                this_albc_for_bdi_end =.false.</div><div class="line"><a name="l00966"></a><span class="lineno">  966</span>&#160;<span class="keywordflow">              END IF</span></div><div class="line"><a name="l00967"></a><span class="lineno">  967</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00968"></a><span class="lineno">  968</span>&#160;</div><div class="line"><a name="l00969"></a><span class="lineno">  969</span>&#160;            <span class="comment">! IF so, check that the data exists:</span></div><div class="line"><a name="l00970"></a><span class="lineno">  970</span>&#160;            <span class="keywordflow">IF</span> (this_albc_for_bdi_end) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00971"></a><span class="lineno">  971</span>&#160;              <span class="keywordflow">IF</span> (steps_to_data_start &gt; steps_to_bdi_end) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00972"></a><span class="lineno">  972</span>&#160;                errorstatus = 101</div><div class="line"><a name="l00973"></a><span class="lineno">  973</span>&#160;                <span class="keyword">WRITE</span> (cmessage,<span class="stringliteral">&#39;(A)&#39;</span>)                                  &amp;</div><div class="line"><a name="l00974"></a><span class="lineno">  974</span>&#160;                  <span class="stringliteral">&#39;Boundary data starts after end of current &#39;</span>//        &amp;</div><div class="line"><a name="l00975"></a><span class="lineno">  975</span>&#160;                  <span class="stringliteral">&#39;boundary data interval&#39;</span></div><div class="line"><a name="l00976"></a><span class="lineno">  976</span>&#160;</div><div class="line"><a name="l00977"></a><span class="lineno">  977</span>&#160;                <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a> (routinename, errorstatus, cmessage)</div><div class="line"><a name="l00978"></a><span class="lineno">  978</span>&#160;              <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (steps_to_data_end &lt; steps_to_bdi_end) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00979"></a><span class="lineno">  979</span>&#160;                errorstatus = 102</div><div class="line"><a name="l00980"></a><span class="lineno">  980</span>&#160;                <span class="keyword">WRITE</span> (cmessage,<span class="stringliteral">&#39;(A)&#39;</span>)                                  &amp;</div><div class="line"><a name="l00981"></a><span class="lineno">  981</span>&#160;                  <span class="stringliteral">&#39;Boundary data ends before end of current &#39;</span>//         &amp;</div><div class="line"><a name="l00982"></a><span class="lineno">  982</span>&#160;                  <span class="stringliteral">&#39;boundary data interval&#39;</span></div><div class="line"><a name="l00983"></a><span class="lineno">  983</span>&#160;</div><div class="line"><a name="l00984"></a><span class="lineno">  984</span>&#160;                <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a> (routinename, errorstatus, cmessage)</div><div class="line"><a name="l00985"></a><span class="lineno">  985</span>&#160;<span class="keywordflow">              END IF</span></div><div class="line"><a name="l00986"></a><span class="lineno">  986</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l00987"></a><span class="lineno">  987</span>&#160;</div><div class="line"><a name="l00988"></a><span class="lineno">  988</span>&#160;          <span class="keywordflow">ELSE</span> <span class="comment">! Not first CALL (Case 2)</span></div><div class="line"><a name="l00989"></a><span class="lineno">  989</span>&#160;</div><div class="line"><a name="l00990"></a><span class="lineno">  990</span>&#160;            <span class="keywordflow">IF</span> (steps_to_data_start &lt;= steps_to_bdi_end .AND.           &amp;</div><div class="line"><a name="l00991"></a><span class="lineno">  991</span>&#160;                steps_to_data_end   &gt;= steps_to_bdi_end) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00992"></a><span class="lineno">  992</span>&#160;              nbound_lookup(1) = (1 - steps_to_data_start / rim_stepsa) &amp;</div><div class="line"><a name="l00993"></a><span class="lineno">  993</span>&#160;                               * (<a class="code" href="namespacelbc__mod.xhtml#a3d4836ab4183574e6b554577d04b1cef">rim_lookupsa</a>-1) + 2</div><div class="line"><a name="l00994"></a><span class="lineno">  994</span>&#160;            <span class="keywordflow">ELSE</span> <span class="keywordflow">IF</span> (steps_to_data_start &gt; steps_to_bdi_end) <span class="keywordflow">THEN</span></div><div class="line"><a name="l00995"></a><span class="lineno">  995</span>&#160;              errorstatus = 101</div><div class="line"><a name="l00996"></a><span class="lineno">  996</span>&#160;              <span class="keyword">WRITE</span> (cmessage,<span class="stringliteral">&#39;(A)&#39;</span>)                                    &amp;</div><div class="line"><a name="l00997"></a><span class="lineno">  997</span>&#160;                <span class="stringliteral">&#39;Boundary data starts after end of current &#39;</span>//          &amp;</div><div class="line"><a name="l00998"></a><span class="lineno">  998</span>&#160;                <span class="stringliteral">&#39;boundary data interval&#39;</span></div><div class="line"><a name="l00999"></a><span class="lineno">  999</span>&#160;</div><div class="line"><a name="l01000"></a><span class="lineno"> 1000</span>&#160;              <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a> (routinename, errorstatus, cmessage)</div><div class="line"><a name="l01001"></a><span class="lineno"> 1001</span>&#160;            <span class="keywordflow">ELSE</span></div><div class="line"><a name="l01002"></a><span class="lineno"> 1002</span>&#160;              errorstatus = 102</div><div class="line"><a name="l01003"></a><span class="lineno"> 1003</span>&#160;              <span class="keyword">WRITE</span> (cmessage,<span class="stringliteral">&#39;(A)&#39;</span>)                                    &amp;</div><div class="line"><a name="l01004"></a><span class="lineno"> 1004</span>&#160;                <span class="stringliteral">&#39;Boundary data ends before end of current &#39;</span>//           &amp;</div><div class="line"><a name="l01005"></a><span class="lineno"> 1005</span>&#160;                <span class="stringliteral">&#39;boundary data interval&#39;</span></div><div class="line"><a name="l01006"></a><span class="lineno"> 1006</span>&#160;</div><div class="line"><a name="l01007"></a><span class="lineno"> 1007</span>&#160;              <span class="keyword">CALL </span><a class="code" href="interfaceereport__mod_1_1ereport.xhtml">ereport</a> (routinename, errorstatus, cmessage)</div><div class="line"><a name="l01008"></a><span class="lineno"> 1008</span>&#160;<span class="keywordflow">            END IF</span></div><div class="line"><a name="l01009"></a><span class="lineno"> 1009</span>&#160;</div><div class="line"><a name="l01010"></a><span class="lineno"> 1010</span>&#160;<span class="keywordflow">          END IF</span> <span class="comment">! (L_FirstCall)</span></div><div class="line"><a name="l01011"></a><span class="lineno"> 1011</span>&#160;</div><div class="line"><a name="l01012"></a><span class="lineno"> 1012</span>&#160;<span class="keywordflow">        END IF</span></div><div class="line"><a name="l01013"></a><span class="lineno"> 1013</span>&#160;</div><div class="line"><a name="l01014"></a><span class="lineno"> 1014</span>&#160;<span class="keywordflow">      END IF</span> <span class="comment">! lateral boundary</span></div><div class="line"><a name="l01015"></a><span class="lineno"> 1015</span>&#160;</div><div class="line"><a name="l01016"></a><span class="lineno"> 1016</span>&#160;      l_firstcall = .false.</div><div class="line"><a name="l01017"></a><span class="lineno"> 1017</span>&#160;</div><div class="line"><a name="l01018"></a><span class="lineno"> 1018</span>&#160;<span class="comment">!   4   End of routine</span></div><div class="line"><a name="l01019"></a><span class="lineno"> 1019</span>&#160;</div><div class="line"><a name="l01020"></a><span class="lineno"> 1020</span>&#160;      <span class="keywordflow">IF</span> (lhook) <span class="keyword">CALL </span>dr_hook(<span class="stringliteral">&#39;INBOUNDA&#39;</span>,zhook_out,zhook_handle)</div><div class="line"><a name="l01021"></a><span class="lineno"> 1021</span>&#160;      <span class="keywordflow">RETURN</span></div><div class="line"><a name="l01022"></a><span class="lineno"> 1022</span>&#160;<span class="keyword">      END SUBROUTINE </span><a class="code" href="inbounda_8f90.xhtml#a03113c1df1b59dfb5e6cd09be4785dba" title="Subroutine INBOUNDA. ">inbounda</a></div><div class="line"><a name="l01023"></a><span class="lineno"> 1023</span>&#160;</div></div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
